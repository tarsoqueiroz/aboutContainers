# <https://www.opencost.io/docs/>
---
# The namespace OpenCost will run in
kind: Namespace
apiVersion: v1
metadata:
  name: opencost
  labels:
    kubernetes.io/metadata.name: opencost
  annotations:
    openshift.io/description: 'OpenCost is a vendor-neutral open source project for measuring and allocating cloud infrastructure and container costs in real time.'
    openshift.io/display-name: opencost
    openshift.io/requester: cotis
---
# Service account for permissions
kind: ServiceAccount
apiVersion: v1
metadata:
  name: opencost
  namespace: opencost
---
# Cluster role giving OpenCost to get, list, watch required resources
# No write permissions are required
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: opencost
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - deployments
      - nodes
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
      - daemonsets
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
---
# Bind the role to the service account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: opencost
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opencost
subjects:
  - kind: ServiceAccount
    name: opencost
    namespace: opencost
---
# Create a deployment for a single cost model pod
#
# See environment variables if you would like to add a Prometheus for
# cost model to read from for full functionality.
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: opencost
  namespace: opencost
  labels:
    app: opencost
spec:
  replicas: 1
  selector:
    app: opencost
    deploymentconfig: opencost
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: opencost
        deploymentconfig: opencost
    spec:
      restartPolicy: Always
      serviceAccountName: opencost
      containers:
        - image: image-registry.openshift-image-registry.svc:5000/paas-hml/opencost:1.111.0
          imagePullPolicy: Always
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          name: opencost
          ports:
          - containerPort: 9003
            protocol: TCP
          resources:
            requests:
              cpu: "250m"
              memory: "128M"
            limits:
              cpu: "1000m"
              memory: "1G"
          env:
            - name: PROMETHEUS_SERVER_ENDPOINT
              value: "http://prometheus-server.prometheus-system.svc" # The endpoint should have the form http://<service-name>.<namespace-name>.svc
            - name: CLOUD_PROVIDER_API_KEY
              value: "AIzaSyD29bGxmHAVEOBYtgd8sYM2gM2ekfxQX4U" # The GCP Pricing API requires a key. This is supplied just for evaluation.
            - name: CLUSTER_ID
              value: "cluster-one" # Default cluster ID to use if cluster_id is not set in Prometheus metrics.
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
---
# Expose the cost model with a service
#
# Without a Prometheus endpoint configured in the deployment,
# only opencost/metrics will have useful data as it is intended
# to be used as only an exporter.
kind: Service
apiVersion: v1
metadata:
  name: opencost
  namespace: opencost
  labels:
    app: opencost
spec:
  selector:
    app: opencost
    deploymentconfig: opencost
  type: ClusterIP
  ports:
    - name: opencost
      port: 9003
      targetPort: 9003
---
