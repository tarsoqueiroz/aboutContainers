---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: consul
  name: consul
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul-server
  namespace: consul
  labels:
    app: consul-server
spec:
  serviceName: consul-server
  podManagementPolicy: Parallel
  replicas: 3
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 1
  selector:
    matchLabels:
      app: consul-server
      component: server
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: consul-server
        component: server
        hasDNS: "true"
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: consul-config
          configMap:
            name: consul-config
      containers:
        - name: consul
          image: "consul:latest"
          resources:
            requests:
              memory: 100Mi
              cpu: 100m
            limits:
              memory: 100Mi
              cpu: 100m
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - "/bin/sh"
            - "-ec"
            - |
              exec /bin/consul agent \
                -advertise="${POD_IP}" \
                -bind=0.0.0.0 \
                -bootstrap-expect=3 \
                -client=0.0.0.0 \
                -config-dir=/consul/config \
                -datacenter=kind \
                -data-dir=/consul/data \
                -hcl="connect { enabled = true }" \
                -ui \
                -retry-join=consul-server-0.consul-server.consul \
                -retry-join=consul-server-1.consul-server.consul \
                -retry-join=consul-server-2.consul-server.consul \
                -server
          volumeMounts:
            - name: data-consul
              mountPath: /consul/data
            - name: consul-config
              mountPath: /consul/config
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - consul leave
          ports:
            - containerPort: 8500
              name: http
            - containerPort: 8301
              name: serflan
            - containerPort: 8302
              name: serfwan
            - containerPort: 8300
              name: server
            - containerPort: 8600
              name: dns-tcp
              protocol: "TCP"
            - containerPort: 8600
              name: dns-udp
              protocol: "UDP"
  volumeClaimTemplates:
    - metadata:
        namespace: consul
        name: data-consul
      spec:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: consul-server
  namespace: consul
  labels:
    app: consul-server
spec:
  ports:
    - port: 8500
      name: http
    - port: 8301
      name: serflan
    - port: 8302
      name: serfwan
    - port: 8300
      name: server
    - port: 8600
      name: dns-tcp
      protocol: "TCP"
    - port: 8600
      name: dns-udp
      protocol: "UDP"
  selector:
    app: consul-server
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: consul
  namespace: consul
spec:
  entryPoints:
    - http
  routes:
    - match: Host(`consul.localhost`)
      kind: Rule
      middlewares: []
      services:
        - name: consul-server
          port: 8500
          scheme: http
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: consul
  name: consul-data-0
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  local:
    path: /var/lib/data/consul-0
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - worker1
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: consul
  name: consul-data-1
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  local:
    path: /var/lib/data/consul-1
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - worker2
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: consul
  name: consul-data-2
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  local:
    path: /var/lib/data/consul-2
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - worker3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-config
  namespace: consul
data:
  config.json: |
    {
      "data_dir": "/consul/data",
      "log_level": "INFO",
      "server": true,
      "bind_addr": "0.0.0.0",
      "client_addr": "0.0.0.0",
      "addresses": {
          "http": "0.0.0.0",
          "https": "0.0.0.0",
          "dns": "0.0.0.0"
      },
      "ui": true,
      "ports": {
          "dns": 8600,
          "http": 8500,
          "https": -1,
          "serf_lan": 8301,
          "serf_wan": 8302,
          "server": 8300
      },
      "domain": "consul",
      "retry_interval": "30s"
    }
